<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8"/>
    <meta name="author" content="Marc Hoyois"/>
    <meta name="description" content="Prevents Flash content from loading automatically"/>
    <title>ClickToFlash Safari extension</title>
    <link rel="stylesheet" type="text/css" href="../styles.css"/>
</head>
<body>
<header id="top">
<h1>ClickToFlash Safari extension</h1>
<p class="author">by Marc Hoyois</p>
</header>

<nav>
<a href="../">My Safari extensions</a> &gt; ClickToFlash
</nav>

<div id="download">
<b>Download links</b>
<ul>
<li><a href="http://github.com/downloads/hoyois/safariextensions/ClickToFlash-1.8.safariextz">Download ClickToFlash 1.8</a></li>
<li><a href="http://github.com/downloads/hoyois/safariextensions/ClickToFlash.fr-1.8.safariextz">Télécharger ClickToFlash 1.8 en français</a></li>
<li><a href="http://github.com/downloads/hoyois/safariextensions/ClickToFlash.ru-1.8.safariextz">Скачать ClickToFlash 1.8 по-русски</a></li>
<li><a href="http://github.com/downloads/hoyois/safariextensions/ClickToFlash.zh_TW-1.8.safariextz">按此下載正體中文的 ClickToFlash 1.8</a></li>
</ul>
</div>

<div class="warning"><p>ClickToFlash 1.8 requires Safari 5.0.1 or newer.</p></div>

<div id="contents">
<b>Jump to</b>
<ul>
    <li><a href="#features">Features</a></li>
    <li><a href="#settings">Settings</a></li>
    <li><a href="#faq_issues">FAQ &amp; Common Issues</a></li>
    <li><a href="#changelog">Release Notes</a></li>
</ul>
</div>

<div id="intro">
<p>This is my attempt at turning the <a href="http://clicktoflash.com/">ClickToFlash web plugin</a> into a Safari extension. It has all the functionality of the plugin and then some.</p>

<p>Feel free to <a href="mailto:marc%20dot%20hoyois%20@t%20gmail%20dot%20com?subject=%5BCTF%5D%20Your%20extension%20rocks,%20but...">request features</a> and please <a href="mailto:marc%20dot%20hoyois%20@t%20gmail%20dot%20com?subject=%5BCTF%5D%20This%20piece%20of%20garbage%20doesn%27t%20work%21">report bugs</a>. <b>However, please read the <a href="#faq_issues">FAQ &amp; Common Issues</a> section carefully before sending me an email.</b></p>

<p>To unpack the source to the current directory, run <code>xar -f /path/to/ClickToFlash.safariextz -x</code>. You can also <a href="http://github.com/hoyois/clicktoflash/tree/safari-5-extension">browse the latest source</a> on GitHub.</p>
</div>

<h3 id="acknowledgements">Acknowledgements</h3>
<p>Both of my extensions owe a lot to several people:</p>
<ul>
    <li>This extension is directly built on <a href="http://github.com/mattball/ClickToFlash-safari-extension">this previous ClickToFlash extension</a> by Matt Ball. Although most of the Javascript code and overall organization has changed, my extension still uses two key ideas from it: a ClickToFlash class that is instantiated by every web page and an army of 'killers' having the task to find HTML5 video replacements. The awesome CSS of the placeholders is also Matt's.</li>
    <li>I learned from Félix Cloutier (developer of <a href="http://safari.laissemoichercherca.com/plugincustoms">Plugin Customs</a>) how to detect Java applets.</li>
    <li>I learned from Rodger Combs' <a href="http://combsconnections.tk/extensions/">Plugin Blocker</a> extension about AJAX requests and how to use them to fetch the URL of videos on Vimeo and Veoh.</li>
</ul>

<p>Further, thanks should be given to</p>
<ul>
    <li>Yuli Cherkashin (Юлий Черкашин) for the Russian localization,</li>
    <li>Shiva Huang for the Traditional Chinese localization.</li>
</ul>

<h2 id="features">Features</h2>
<p class="toplink"><a href="#top">To the top</a></p>

<h3 id="features_blocking">Blocking Flash</h3>
<p>ClickToFlash replaces every Flash element by a placeholder element (fig.&#160;1) before the browser starts fetching the Flash content. The user can load the Flash content manually by clicking on this placeholder. Right-clicking on the placeholder reveals the usual contextual menu with one added item, 'Hide Flash', which effectively removes the HTML element from the webpage. This is useful for getting rid of Flash overlays that block access to page content. Additional contextual menu items for adding a page or source to the whitelist and unlocking all Flash elements on the page can be enabled in the <a href="#menus">settings</a>.</p>

<figure>
<img src="CTF_Flash.png" alt="Flash placeholder"/>
<figcaption>Figure 1: Flash placeholder element</figcaption>
</figure>

<h3 id="features_replacing">Replacing Flash by HTML5 videos</h3>
<p>ClickToFlash is able to replace certain Flash elements by HTML5 <code>&lt;video&gt;</code> tags. The label of the placeholder is then changed accordingly, and an 'HD' prefix is added if ClickToFlash knows that the video has resolution 720p or 1080p (fig.&#160;2). Clicking on such a placeholder loads Safari's video player. In Snow Leopard this video player features a fullscreen button (fig.&#160;3) and uses hardware acceleration on supported Macs. Double-clicking inside the video player toggles looping.</p>

<figure>
<img src="CTF_H264.png" alt="Video placeholder"/>
<img src="CTF_HDH264.png" alt="HD Video placeholder"/>
<figcaption>Figure 2: Video placeholder elements</figcaption>
</figure>

<figure>
<img src="Safari_video_player.png" alt="Safari video player"/>
<figcaption>Figure 3: Safari's video player in Snow Leopard</figcaption>
</figure>

<p>The original Flash element can still be loaded by right-clicking on the placeholder and choosing 'Load Flash', or by right-clicking the video and choosing 'Reload in Flash'.</p>

<p>By default, ClickToFlash will first try to replace a Flash element by a video playable natively (i.e. without any plugin) by QuickTime. It should succeed with the following Flash elements:</p>
<ul>
<li><b>YouTube videos.</b> Both on-site and embedded videos. All YouTube videos have H.264-encoded MP4-contained sources. Resolutions in this format are Medium (&#x2264;360p, always available), 720p, 1080p, and 4K.</li>
<li><b>Vimeo videos.</b> Both on-site and embedded videos. All Vimeo videos have H.264-encoded sources, and most of them are in MP4 containers. A few are FLV files that Safari cannot play natively. Resolutions are 360p and 720p.</li>
<li><b> Dailymotion videos.</b> Both on-site and embedded videos (not including external videos available on Dailymotion's website). All Dailymotion videos available in 'high quality' have H.264-encoded MP4-contained sources. Resolution are &#x2264;480p and 720p.</li>
<li>Videos played in the <a href="http://www.longtailvideo.com/">JW Player</a>, if they are playable by QuickTime.</li>
<li>Flash objects with <code>&lt;video&gt;</code> fallback content.</li>
</ul>

<p>If the Perian component is installed, ClickToFlash can further replace the following elements:</p>
<ul>
    <li>480p YouTube videos.</li>
    <li>All remaining Vimeo and Dailymotion videos.</li>
    <li><b>Veoh videos.</b> Both on-site and embedded videos (not including external videos available on Veoh's website).</li>
</ul>

<p class="note">Playback of nonnative codecs in Safari uses much more CPU than native playback. Moreover, if autoplay is enabled, Safari usually starts playing the video too early for smooth playback. For these reasons the feature can be disabled completely. In my casual testing, for 480p YouTube videos, playback using Perian uses on average half as much CPU as YouTube's Flash player.</p>

<h4>Playlists</h4>

<p>If the 'Use playlists' setting is enabled, ClickToFlash can sometimes load whole playlists into the video player. This feature is available for YouTube's on-site playlists (<code>&amp;p=</code> URLs), YouTube's embedded playlists, and JW Player playlists. When a playlist is used, an additional control bar appears above the default one, featuring the title of the video being played, previous/next buttons to navigate the playlist, and an input field that can be used to jump to a video in the playlist (fig.&#160;5).</p>

<figure>
<img src="CTF_Playlist.png" alt="Video playlist"/>
<figcaption>Figure 5: Video playlist controls</figcaption>
</figure>

<h2 id="settings">Settings</h2>
<p class="toplink"><a href="#top">To the top</a></p>

<h3 id="video_settings">Video Settings</h3>

<figure>
<img src="Video_Settings.png" alt="Video settings screenshot"/>
<img src="Video_Settings2.png" alt="Video settings screenshot 2"/>
<img src="Video_Settings3.png" alt="Video settings screenshot 3"/>
<img src="Video_Settings4.png" alt="Video settings screenshot 4"/>
</figure>

<p><b>Look for video replacements to Flash</b><br/>
If unticked, ClickToFlash does not go through the process of looking for video files to replace Flash elements. All the following options are then without effect.</p>

<p><b>Use playlists</b><br/>
If ticked, ClickToFlash can load whole playlists from YouTube (on-site and embedded) and the JW Player into the HTML5 video player.</p>

<p><b>Show preview image on placeholder</b><br/>
If ticked, a preview image of the video is shown on the placeholder instead of the usual gray gradient. Such preview images are not available for all videos.</p>

<p><b>Load the video player automatically</b><br/>
If ticked, ClickToFlash automatically replaces Flash elements on locations matching a string in the text field by <code>&lt;video&gt;</code> elements when available, without waiting for the user to click on a placeholder. Strings in the text field must be separated by spaces. Simply leave the text field blank to use this behavior on all web pages.</p>

<p><b>Initial behavior</b><br/>
Choose whether ClickToFlash creates <code>&lt;video&gt;</code> tags with the 'preload' attribute set to 'none', to 'auto', or with the 'autoplay' attribute. With the 'Do not buffer' option, the video will only start buffering when the 'Play' button is clicked.</p>

<p><b>Nonnative codecs</b><br/>
Prescribe whether ClickToFlash considers video files that will use third-party QuickTime components to play. If 'Use only as a last resort' is selected, ClickToFlash will not load such videos unless there are no natively playable videos available. If 'Use freely' is selected, ClickToFlash will load the highest-quality video regardless of its format.</p>

<p><b>Max resolution</b><br/>
An upper bound on the resolutions of the videos loaded by ClickToFlash. (Because YouTube's videos are of average quality, I find that it is worth choosing the 1080p option even on a 720p screen.)</p>

<p><b>Sound volume</b><br/>
Sets the initial volume of videos created by ClickToFlash. Videos on the active page will also respond to this slider while playing.</p>

<h3 id="whitelist_settings">Whitelists</h3>

<figure>
<img src="Whitelists.png" alt="Whitelists settings screenshot"/>
</figure>

<p><b>Location matches</b><br/>
Matches Flash content in documents whose absolute URL contains one of these strings.</p>

<p><b>Source matches</b><br/>
Matches Flash content whose absolute URL contains one of these strings.</p>

<p><b>Size matches</b><br/>
Matches the offset size of an element.</p>

<h3 id="menus">Contextual menu items</h3>

<figure>
<img src="Contextual_menu_items.png" alt="Contextual menu items settings screenshot"/>
</figure>

<p><b>Add to Whitelist</b><br/>
A contextual menu item that reads 'Add Source to Whitelist' on placeholder elements and 'Add Location to Whitelist' elsewhere. When selected, a JavaScript pop-up box appears with the URL of the source or location that the user can trim before adding to the respective whitelist.</p>

<p><b>Load All Flash</b><br/>
Loads all blocked Flash in a document.</p>

<p><b>Download Video</b><br/>
Appears on video placeholders and video elements.</p>

<p><b>View on Site</b><br/>
Appears on embedded YouTube, Vimeo, Dailymotion, and Veoh videos. It loads the video on its respective website in a new tab.</p>

<p><b>View in QuickTime Player</b><br/>
Opens a video in the QuickTime Player application.</p>

<h3 id="other_settings">Other</h3>

<figure>
<img src="Other.png" alt="Other settings screenshot"/>
<img src="Other2.png" alt="Other settings screenshot 2"/>
</figure>

<p><b>sIFR Text</b><br/>
sIFR is a pre-CSS3 technology for displaying advanced typography on the web. It uses JavaScript to replace some text elements on the page by text-mimicking Flash elements. Choose 'Show text only' to disable this process and display the original HTML text.</p>

<p><b>Opacity</b><br/>
This slider controls the opacity of the placeholder elements, from invisible to opaque.</p>

<p><b>Block content manually</b><br/>
If ticked, a pop-up box asks the user for confirmation before blocking any element. This box displays the following information about the element: its location, its source, its position within its document, and its size. Further, an option 'Show Element' is added to the contextual menu of placeholder elements; selecting it shows the location and source of the blocked element, as well as the blocked element itself. This is useful for getting information about invisible elements or the location of elements within iframes.</p>

<h2 id="faq_issues">FAQ &amp; Common Issues</h2>
<p class="toplink"><a href="#top">To the top</a></p>

<h3 id="faq">FAQ</h3>

<p class="question">Can I use this extension together with the ClickToFlash plugin?</p>
<p class="answer">No, unless you want to have to click twice to unlock every element.</p>

<p class="question">Why would I want to allow all elements below a given size?</p>
<p class="answer">You don't. For security and privacy reasons, automatically allowing elements on random pages is not recommended. Also, elements can be small at first but later grow to become full-fledged ads.</p>
<p>The reason why some people will still use this setting despite my recommendation is the following.
Very small elements, also called 'invisible' elements, are not meant to be seen and thus often have important functions. Some web pages will be crippled when they are blocked, and obviously it is difficult to locate them and load them manually. For example, a common effect of invisible Flash is the message <em>Please install Flash player</em> being displayed instead of expected Flash content: this happens because an invisible Flash element whose function is to replace this message by the Flash object failed to load. The size of these control elements is usually 1x1 px, but some websites are known to use invisible elements up to 8x8 px in size.</p>
<p>That said, you should only use this setting to quickly check if an issue on a trusted page is caused by an invisible element. If it resolves the issue, turn the setting back off and use the 'Block content manually' setting to find out the source of the culprit, and match it with the source whitelist.</p>

<p class="question">Can I use regular expressions in whitelists?</p>
<p class="answer">Yes! All whitelist-like text fields in the settings support regular expressions. For a string to be considered as a regular expression, it must be enclosed in parentheses. These regular expressions must follow the Javascript syntax (in particular, lookbehinds are not supported). Invalid regular expressions are ignored.</p>

<h3 id="issues">Common issues</h3>

<h4>Google Street View not working</h4>

<p>Add <code>maps.gstatic.com</code> to the source whitelist or, if you have the 'Load All Flash' contextual menu item enabled, use it after dragging the yellow guy on the map.</p>

<h4>Content still being blocked after whitelisting a page</h4>

<p>A single tab can contain several documents, each with its own URL, and the URL displayed in Safari's toolbar is that of the root document only. The location whitelist considers the location of an element to be the URL of its document. To find out the real location of an element, tick the 'Block content manually' checkbox in the settings, right-click on the element's placeholder, and select 'Show Element'.</p>

<h4 id="list_invisible">List of invisible elements having critical functions</h4>

<table>
<thead>
<tr>
    <th>Domains</th>
    <th>Function of invisible element</th>
    <th>Size</th>
    <th>Source</th>
</tr>
</thead>
<tbody>
<tr>
    <td>prostopleer.com &amp; others</td>
    <td>Required by SoundManager2 for Flash 9</td>
    <td>8x8</td>
    <td>soundmanager2_flash9.swf</td>
</tr>
<tr>
    <td>github.com, soundcloud.com, www.discogs.com &amp; others</td>
    <td>Required by SoundManager2 for Flash 8</td>
    <td>6x6 or 8x8</td>
    <td>soundmanager2.swf</td>
</tr>
<tr>
    <td>www.amazon.com</td>
    <td>Amazon music samples</td>
    <td>1x1</td>
    <td>g-ecx.images-amazon.com</td>
</tr>
<tr>
    <td>www.bbc.co.uk</td>
    <td>Loads video players on some news pages</td>
    <td>1x1</td>
    <td>emp_proxy.swf</td>
</tr>
<tr>
    <td>www.hulu.com</td>
    <td>Loads the main video player</td>
    <td>1x1</td>
    <td>http://www.hulu.com/loadplayer.swf</td>
</tr>
<tr>
    <td>various</td>
    <td>Required by Yahoo! Media Player</td>
    <td>1x1</td>
    <td>flashsound-2.0.31.swf</td>
</tr>
</tbody>
</table>

<h2 id="changelog">Release Notes</h2>
<p class="toplink"><a href="#top">To the top</a></p>

<p id="v1.8"><b>Version 1.8</b> (October 1, 2010)</p>
<ul>
    <li>Video files downloaded from YouTube are named by the title of the video</li>
    <li>Removed download links in favor of an optional contextual menu item (enabled by default)</li>
    <li>Bumped version number because it was getting out of control!</li>
</ul>

<p id="v1.7.10"><b>Version 1.7.10</b> (September 30, 2010)</p>
<ul>
    <li>Fixed loading of long playlists with missing tracks</li>
</ul>

<p id="v1.7.9"><b>Version 1.7.9</b> (September 29, 2010)</p>
<ul>
    <li>Clicking on a download link downloads the video directly</li>
    <li>Displays the blocked element's source as a tooltip when hovering a placeholder</li>
    <li>Placeholders inherit CSS box model and positioning properties of the blocked element to preserve page layout</li>
    <li>Fixed progressive loading of playlists</li>
</ul>

<p id="v1.7.8"><b>Version 1.7.8</b> (September 23, 2010)</p>
<ul>
    <li>Fixed invisible elements whitelisting</li>
</ul>

<p id="v1.7.7"><b>Version 1.7.7</b> (September 21, 2010)</p>
<ul>
    <li>Eradicated all listeners to mutation events from the extension</li>
    <li>Fixed broken CSS introduced in 1.7.6</li>
</ul>

<p id="v1.7.6"><b>Version 1.7.6</b> (September 16, 2010)</p>
<ul>
    <li>Whitelists now use spaces as separators (they are automatically updated)</li>
    <li>More successful video replacements for generic Flash players</li>
    <li>Does not replace streaming YouTube videos by nonfunctional video elements anymore</li>
    <li>Improved performance and correctness of whitelist parsing</li>
    <li>Fixed Flash not being loadable on some websites that use placeholders for their Flash objects and listen to click events from parent elements</li>
</ul>

<p id="v1.7.5"><b>Version 1.7.5</b> (September 10, 2010)</p>
<ul>
    <li>Fixed a bug introduced in 1.7.4 that could create several placeholder elements for the same blocked element</li>
</ul>

<p id="v1.7.4"><b>Version 1.7.4</b> (September 9, 2010)</p>
<ul>
    <li>Fixed Flash elements not showing up or not behaving properly when restored, in particular in those instances where the original ClickToFlash plugin works but this extension did not</li>
    <li>CSS has been completely rewritten to be more effective</li>
    <li>Worked around a bug in Safari that changed the aspect ratio of the video element when using full-page zoom (thanks Adrian Luff!)</li>
    <li>Fixed: some embedded Vimeo videos were not being replaced</li>
</ul>

<p id="v1.7.3"><b>Version 1.7.3</b> (September 6, 2010)</p>
<ul>
    <li>Fixed a typo affecting source blacklisting (thanks Marc Saurfelt!)</li>
    <li>Improved CSS to better override author stylesheets</li>
</ul>

<p id="v1.7.2"><b>Version 1.7.2</b> (September 4, 2010)</p>
<ul>
    <li>Fixed a potential compatibility issue with other extensions (regression introduced in 1.7, thanks Mike Cosentino!)</li>
</ul>

<p id="v1.7.1"><b>Version 1.7.1</b> (September 4, 2010)</p>
<ul>
    <li>Fixed handling of elements with no source and no type (regression introduced in 1.7)</li>
</ul>

<p id="v1.7"><b>Version 1.7</b> (September 4, 2010)</p>
<ul>
    <li>Preview images on video placeholders</li>
    <li>Direct link to the video at the bottom of video placeholders</li>
    <li>The setting to load the video player automatically is now a whitelist</li>
    <li>Lighter placeholders</li>
    <li>Improved CSS of video elements (controls stay at the bottom)</li>
    <li>Adding a location or source to the whitelist loads the targeted content at once</li>
    <li>Support for YouTube's future on-site player</li>
    <li>Support for Vimeo's new universal player</li>
    <li>Higher-quality poster images for Dailymotion videos</li>
    <li>Fixed Vimeo's SD video URLs: they now correctly points to the 360p version in all cases</li>
    <li>Fixed relative URL resolution</li>
    <li>Fixed a vulnerability that would allow invalid HTML to bypass ClickToFlash's blocking</li>
</ul>

<p id="v1.6.3"><b>Version 1.6.3</b> (August 20, 2010)</p>
<ul>
    <li>To download a video directly, move the mouse cursor up from the play/pause button to reveal a link</li>
    <li>Added a slider to control the opacity of the placeholder elements</li>
    <li>Most contextual menu items are now optional</li>
    <li>Added 'View in QuickTime Player' contextual menu item</li>
    <li>Tweaked the CSS so that inline objects remain inline (thanks Roberto!)</li>
    <li><del>TODO: Update this webpage&#x2026;</del></li>
</ul>

<p id="v1.6.2"><b>Version 1.6.2</b> (August 16, 2010)</p>
<ul>
    <li>First .2 release ever!</li>
    <li>The 'Load All Flash' contextual menu item is hidden if there is no blocked Flash on the page</li>
    <li>'View on YouTube' works for playlists</li>
    <li>Fixed a few unfortunate typos affecting playlist controls</li>
    <li>Fixed: volume setting became ineffective in 1.6</li>
    <li>Longest changelog yet!</li>
</ul>

<p id="v1.6.1"><b>Version 1.6.1</b> (August 14, 2010)</p>
<ul>
    <li>Added a contextual menu item to view an embedded video from YouTube, Vimeo, Dailymotion, or Veoh on the main website</li>
    <li>Fixed more: some embedded YouTube videos were not being replaced</li>
</ul>

<p id="v1.6"><b>Version 1.6</b> (August 13, 2010)</p>
<ul>
    <li>Playlist support for YouTube and the JW Player</li>
    <li>Added a contextual menu item to download the video file</li>
    <li>Fixed: some embedded YouTube videos were not being replaced</li>
</ul>

<p id="v1.5.1"><b>Version 1.5.1</b> (August 8, 2010)</p>
<ul>
    <li>Code optimization made possible by the disappearance of a bug in Safari 5.0.1</li>
</ul>

<p id="v1.5"><b>Version 1.5</b> (August 6, 2010)</p>
<ul>
    <li>Added support for Veoh videos (requires Perian)</li>
    <li>Added a setting to use nonnative codecs only as a last resort</li>
    <li>Fixed: some embedded Vimeo videos were not being replaced</li>
    <li>Worked around the fact that Safari would load fallback content upon restoring an object if fallback content was being used when it was removed</li>
</ul>

<p id="v1.4"><b>Version 1.4</b> (August 3, 2010)</p>
<ul>
    <li>Added 'Load All Flash' contextual menu item</li>
    <li>In the whitelist settings, a string enclosed in parentheses is now interpreted as a regular expression</li>
    <li>Debugging mode is now a hidden setting</li>
</ul>

<p id="v1.3"><b>Version 1.3</b> (August 2, 2010)</p>
<ul>
    <li>Extension icon by Ast A. Moore</li>
    <li>Added optional use of nonnative codecs. With Perian installed ClickToFlash can now replace:
    <ul>
        <li>360p and 480p YouTube videos</li>
        <li>all the previously unplayable Vimeo and Dailymotion videos</li>
    </ul>
    </li>
    <li>Added more control over the attributes of the <code>&lt;video&gt;</code> tags</li>
</ul>

<p id="v1.2"><b>Version 1.2</b> (August 2, 2010)</p>
<ul>
    <li>Added negated whitelisting</li>
    <li>Added an optional contextual menu item to add a source or location to the whitelist</li>
    <li>Replacement of embedded YouTube videos now works if YouTube is in HTML5 Beta (thanks again Ast!)</li>
</ul>

<p id="v1.1.1"><b>Version 1.1.1</b> (July 31, 2010)</p>
<ul>
    <li>Fixed Flash not being blocked on some sites due to invalid MIME types (thanks Ast A. Moore!)</li>
</ul>

<p id="v1.1"><b>Version 1.1</b> (July 31, 2010)</p>
<ul>
    <li>Fixed whitelisting</li>
    <li>The 'Remove Element' contextual menu item now removes all parent nodes of the element as long as they have a single child.</li>
</ul>

<p id="v1.0"><b>Version 1.0</b> (July 30, 2010)</p>
<ul>
    <li>Initial release</li>
</ul>

<footer>
<p id="footer_left">Updated on October 3, 2010</p>
<p id="footer_right"><a href="#top">To the top</a></p>
<p id="footer_middle"><a href="http://validator.w3.org/check?uri=http%3A%2F%2Fhoyois.github.com%2Fsafariextensions%2Fclicktoflash%2F;verbose=1">XHTML5</a> • <a href="http://jigsaw.w3.org/css-validator/validator?uri=http%3A%2F%2Fhoyois.github.com%2Fsafariextensions%2Fclicktoflash%2F&amp;profile=css3&amp;usermedium=all&amp;warning=1">CSS3</a></p>
</footer>

</body>
</html>

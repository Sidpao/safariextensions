<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8"/>
    <meta name="author" content="Marc Hoyois"/>
    <meta name="description" content="Prevents Flash content from loading automatically"/>
    <title>ClickToFlash Safari extension</title>
    <link rel="stylesheet" type="text/css" href="../styles.css"/>
</head>
<body>
<header id="top">
<h1>ClickToFlash Safari extension</h1>
<p class="author">by Marc Hoyois</p>
</header>

<nav>
<a href="../">My Safari extensions</a> &gt; ClickToFlash
</nav>

<div id="download">
<b>Download links</b>
<ul>
<li><a href="http://github.com/downloads/hoyois/safariextensions/ClickToFlash-2.1.safariextz">Download ClickToFlash 2.1</a></li>
<li><a href="http://github.com/downloads/hoyois/safariextensions/ClickToFlash.fr-2.1.safariextz">Télécharger ClickToFlash 2.1 en français</a></li>
<li><a href="http://github.com/downloads/hoyois/safariextensions/ClickToFlash.ru-1.9.2.safariextz">Скачать ClickToFlash 1.9.2 по-русски</a></li>
<li><a href="http://github.com/downloads/hoyois/safariextensions/ClickToFlash.zh_TW-1.9.2.safariextz">按此下載正體中文的 ClickToFlash 1.9.2</a></li>
<li><a href="http://github.com/downloads/hoyois/safariextensions/ClickToFlash.es-1.9.2.safariextz">Descargar ClickToFlash 1.9.2 en Español</a></li>
<!--<li><a href="http://github.com/downloads/hoyois/safariextensions/ClickToFlash.ru-2.1.safariextz">Скачать ClickToFlash 2.1 по-русски</a></li>
<li><a href="http://github.com/downloads/hoyois/safariextensions/ClickToFlash.zh_TW-2.1.safariextz">按此下載正體中文的 ClickToFlash 2.1</a></li>
<li><a href="http://github.com/downloads/hoyois/safariextensions/ClickToFlash.es-2.1.safariextz">Descargar ClickToFlash 2.1 en Español</a></li>-->
</ul>
</div>

<div id="requirements">
<b>Requirements</b>
<ul>
    <li>Safari 5.0.1 or higher</li>
    <li>On Windows, QuickTime is required for HTML5 video</li>
</ul>
</div>

<div id="contents">
<b>Jump to</b>
<ul>
    <li><a href="#features">Features</a></li>
    <li><a href="#settings">Settings</a></li>
    <li><a href="#faq_issues">FAQ &amp; Common Issues</a></li>
    <li><a href="#changelog">Release Notes</a></li>
</ul>
</div>

<div id="intro">
<p>This is my attempt at turning the <a href="http://clicktoflash.com/">ClickToFlash web plugin</a> into a Safari extension. It has all the functionality of the plugin and then some.</p>

<p>Feel free to <a href="mailto:marc%20dot%20hoyois%20@t%20gmail%20dot%20com?subject=%5BCTF%5D%20Your%20extension%20rocks,%20but...">request features</a> and please <a href="mailto:marc%20dot%20hoyois%20@t%20gmail%20dot%20com?subject=%5BCTF%5D%20This%20piece%20of%20garbage%20doesn%27t%20work%21">report bugs</a>. <b>However, please read the <a href="#faq_issues">FAQ &amp; Common Issues</a> section carefully before sending me an email.</b></p>

<p>To unpack the source to the current directory, run <code>xar -f /path/to/ClickToFlash.safariextz -x</code>. You can also <a href="http://github.com/hoyois/clicktoflash/tree/safari-5-extension">browse the latest source</a> on GitHub.</p>
</div>

<h3 id="acknowledgements">Acknowledgements</h3>
<p>Both of my extensions owe a lot to several people:</p>
<ul>
    <li>This extension is directly built on <a href="http://github.com/mattball/ClickToFlash-safari-extension">this previous ClickToFlash extension</a> by Matt Ball. Although most of the Javascript code and overall organization has changed, my extension still uses two key ideas from it: a ClickToFlash class that is instantiated by every web page and an army of 'killers' having the task to find HTML5 video replacements. The awesome CSS of the placeholders is also Matt's.</li>
    <li>I learned from Félix Cloutier (developer of <a href="http://safari.laissemoichercherca.com/plugincustoms">Plugin Customs</a>) how to detect Java applets.</li>
    <li>I learned from Rodger Combs' <a href="http://combsconnections.tk/extensions/">Plugin Blocker</a> extension about AJAX requests and how to use them to fetch the URL of videos on Vimeo and Veoh.</li>
    <li>The extension's icon was designed by Ast A. Moore.</li>
    <li>The CSS of the source selector was devised by Robert Lange.</li>
</ul>

<p>Further, thanks should be given to</p>
<ul>
    <li>Yuli Cherkashin (Юлий Черкашин) for the Russian localization,</li>
    <li>Shiva Huang for the Traditional Chinese localization,</li>
    <li><a href="http://www.aoneonline.net/">aONe</a> for the Spanish localization.</li>
</ul>

<h2 id="features">Features</h2>
<p class="toplink"><a href="#top">To the top</a></p>

<h3 id="features_blocking">Blocking Flash</h3>
<p>ClickToFlash prevents the Flash plugin from running automatically, resulting in faster browsing, reduced fan usage, and increased battery life. It replaces every Flash object by a placeholder element (fig.&#160;1) that can be clicked to load the embedded content. Right-clicking on a placeholder reveals the usual contextual menu with one added item, 'Hide Flash', which effectively removes the HTML element from the webpage. This is useful for getting rid of Flash overlays that block access to page content. Additional contextual menu items for adding a page or element to the whitelist and unlocking all Flash elements on the page can be enabled in the <a href="#menus">settings</a>.</p>

<figure>
<img src="CTF_Flash.png" alt="Flash placeholder"/>
<figcaption>Figure 1: Flash placeholder element</figcaption>
</figure>

<h3 id="features_replacing">Replacing Flash by HTML5 elements</h3>
<p>ClickToFlash is able to replace certain Flash elements by HTML5 media elements. The label of the placeholder is then changed accordingly (fig.&#160;2), and a preview image of the video is shown when available. Clicking on such a placeholder loads Safari's video player. In Snow Leopard this video player features a fullscreen button (fig.&#160;3) and uses hardware acceleration on supported Macs. Double-clicking inside the video player toggles looping.</p>

<figure>
<img src="CTF_H264.png" alt="Video placeholder"/>
<img src="CTF_HDH264.png" alt="HD Video placeholder"/>
<figcaption>Figure 2: Examples of video placeholder elements</figcaption>
</figure>

<figure>
<img src="Safari_video_player.png" alt="Safari video player"/>
<figcaption>Figure 3: Safari's video player in Snow Leopard</figcaption>
</figure>

<p>The original Flash element can still be loaded by option-clicking or middle-clicking the placeholder, by right-clicking on the placeholder and choosing 'Load Flash', or by right-clicking the video and choosing 'Reload in Flash'.</p>

<p>ClickToFlash can create HTML5 versions of most videos (both on-site and embedded) from the following web sites: YouTube, Vimeo, Dailymotion, Blip.tv, Break.com, Megavideo, Metacafe, and Veoh. In addition, ClickToFlash will find audio/video replacements to several generic Flash players and use existing <code>&lt;audio&gt;</code>/<code>&lt;video&gt;</code> fallback content.</p>

<p class="note">Playback of nonnative codecs in Safari uses much more CPU than native playback and does not benefit from hardware acceleration. Moreover, if autoplay is enabled, Safari may start playing the video too early for smooth playback.</p>

<h4 id="sources">Source selection</h4>

<p>If the 'Show list of available sources' setting is enabled, a list of all available video sources (for example differing in quality) appears when hovering in the top left corner of the video placeholder or the video element (fig.&#160;4). On the video placeholder, clicking on a source loads that source. On the video element, clicking on a source loads that source and jumps to the current playback time if the video is seekable. When right-clicking on a source, the 'Download Video' and 'View in QuickTime Player' options apply to that particular source.</p>

<figure>
<img src="Sources.png" alt="List of sources on placeholder"/>
<img src="Sources2.png" alt="List of sources on video element"/>
<figcaption>Figure 4: Lists of sources</figcaption>
</figure>

<h4 id="playlists">Playlists</h4>

<p>If the 'Use playlists' setting is enabled, ClickToFlash can sometimes load whole playlists into the video player. This feature is available for YouTube's on-site playlists (<code>&amp;p=</code> URLs), YouTube's embedded playlists, and JW Player playlists. When a playlist is used, an additional control bar appears above the default one, featuring the title of the video being played, previous/next buttons to navigate the playlist, and an input field that can be used to jump to a video in the playlist (fig.&#160;5).</p>

<figure>
<img src="Playlist.png" alt="Video playlist"/>
<figcaption>Figure 5: Video playlist controls</figcaption>
</figure>

<h2 id="settings">Settings</h2>
<p class="toplink"><a href="#top">To the top</a></p>

<h3 id="whitelist_settings">Whitelists</h3>

<figure>
<img src="Whitelists.png" alt="Whitelists settings screenshot"/>
</figure>

<p>Items in whitelists must be separated by spaces.</p>

<p><b>Locations whitelist</b><br/>
Matches Flash content in documents whose absolute URLs contain an item of this list.</p>

<p><b>Sources whitelist</b><br/>
Matches Flash content whose absolute URL (i.e. the URL of the SWF file) contains an item of this list.</p>

<p><b>Negate lists</b><br/>
Tick this to use these lists as blacklists instead of whitelists.</p>

<h3 id="video_settings">HTML5 Settings</h3>

<figure>
<img src="HTML5_Settings.png" alt="HTML5 settings screenshot"/>
<img src="HTML5_Settings2.png" alt="HTML5 settings screenshot 2"/>
<img src="HTML5_Settings3.png" alt="HTML5 settings screenshot 3"/>
<img src="HTML5_Settings4.png" alt="HTML5 settings screenshot 4"/>
</figure>

<p><b>Look for media replacements to Flash</b><br/>
If unticked, ClickToFlash does not go through the process of looking for video files to replace Flash elements. All the following options are then without effect.</p>

<p><b>Show list of available sources</b><br/>
See <a href="#sources">above</a>.</p>

<p><b>Use playlists</b><br/>
See <a href="#playlists">above</a>.</p>

<p><b>Load the media player automatically</b><br/>
If ticked, ClickToFlash automatically replaces Flash elements on locations matching a string in the text field by HTML5 media elements when available, without waiting for the user to click on a placeholder. Items in the text field must be separated by spaces. Simply leave the text field blank to use this behavior on all web pages.</p>

<p><b>Initial behavior</b><br/>
Choose whether ClickToFlash creates media elements with the 'preload' attribute set to 'none', to 'auto', or with the 'autoplay' attribute. With the 'Do not buffer' option, the video will only start buffering when the 'Play' button is clicked.</p>

<p><b>Preferred source</b><br/>
An upper bound on the resolutions of the videos loaded by ClickToFlash. If 'Flash' is selected, HTML5 video can only be loaded from the list of sources (a star will appear on the placeholder's badge to indicate that alternative media sources are available).</p>

<p><b>Nonnative codecs</b><br/>
Prescribe whether ClickToFlash considers video files that will use third-party QuickTime components to play. If 'Use only as a last resort' is selected, ClickToFlash will not load such videos unless there are no natively playable videos available. If 'Use freely' is selected, ClickToFlash will load the highest-quality video regardless of its format.</p>

<p><b>Sound volume</b><br/>
Sets the initial volume of videos created by ClickToFlash. Videos on the active page will also respond to this slider while playing.</p>

<h3 id="menus">Contextual menu items</h3>

<figure>
<img src="Contextual_menu_items.png" alt="Contextual menu items settings screenshot"/>
</figure>

<p><b>Disable/Enable ClickToFlash</b><br/>
Disabling ClickToFlash prevents it from injecting its scripts in any new web page. The active page is reloaded, while ClickToFlash will continue to work normally in other existing pages. Enabling ClickToFlash has the opposite effect.</p>

<p><b>Add to Whitelist</b><br/>
A contextual menu item that reads 'Add Source to Whitelist' on placeholder elements and 'Add Location to Whitelist' elsewhere. When selected, a JavaScript pop-up box appears with the URL of the source or location that the user can trim before adding to the respective whitelist.</p>

<p><b>Load All Flash</b><br/>
Appears everywhere except on placeholder elements and loads all blocked Flash in a document.</p>

<p><b>Load Invisible Flash</b><br/>
A Flash object is considered invisible if its size is at most 8x8 pixels.</p>

<p><b>Download Video</b><br/>
Appears on video placeholders and video elements.</p>

<p><b>View on Site</b><br/>
Appears on embedded Blip.tv, Break.com, Dailymotion, Megavideo, Metacafe, Veoh, Vimeo, and YouTube videos. It loads the video on its respective website in a new tab.</p>

<p><b>View in QuickTime Player</b><br/>
Opens a video in the QuickTime Player application.</p>

<h3 id="other_settings">Other</h3>

<figure>
<img src="Other.png" alt="Other settings screenshot"/>
<img src="Other2.png" alt="Other settings screenshot 2"/>
</figure>

<p><b>Allow invisible Flash</b><br/>
A Flash object is considered invisible if its size is at most 8x8 pixels.</p>

<p><b>Block Flash manually</b><br/>
If ticked, a pop-up box asks the user for confirmation before blocking any element. This box displays the following information about the element: its location, its source, its position within its document, and its size. Further, an option 'Show Element' is added to the contextual menu of placeholder elements; selecting it shows the location and source of the blocked element, as well as the blocked element itself. This is useful for getting information about invisible elements or the location of elements within iframes.</p>

<p><b>sIFR text</b><br/>
sIFR is a pre-CSS3 technology for displaying advanced typography on the web. It uses JavaScript to replace some text elements on the page by text-mimicking Flash elements. Choose 'Show text only' to disable this process and display the original HTML text.</p>

<p><b>Opacity</b><br/>
This slider controls the opacity of the placeholder elements, from invisible to opaque.</p>

<h3 id="hidden_settings">Hidden settings</h3>

<p>Hidden settings cannot be modified from Safari's preferences. To set the hidden setting <code>key</code> to the value <code>value</code>, run <code>defaults write com.apple.Safari ExtensionSettings-com.hoyois.safari.clicktoflash-GY5KR7239Q -dict-add key -string 'value'</code> in the Terminal (to undo, use the default value). Safari must be restarted for the new values to take effect. You can use this command to set any other setting as well, but keep in mind that <code>value</code> must be a JSON-parseable string.</p>

<table>
<thead>
<tr>
    <th>Key</th>
    <th>Default</th>
    <th>Function</th>
</tr>
</thead>
<tbody>
<tr>
    <td><code>disabledKillers</code></td>
    <td><code>[]</code></td>
    <td>Must be an array of integers (e.g. <code>[5,7,8]</code>). Each integer corresponds to a killer to be deactivated: 0 YouTube, 1 Vimeo, 2 Dailymotion, 3 Break.com, 4 Blip.tv, 5 Metacafe, 6 Tumblr, 7 Veoh, 8 Megavideo, 9 Broadcast Interactive, 10 Generic (this numbering might change with each update).</td>
</tr>
<tr>
    <td><code>maxInvisibleSize</code></td>
    <td><code>8</code></td>
    <td>Must be a number. An element is considered invisible if its width and its height are at most this number.</td>
</tr>
<tr>
    <td><code>showPoster</code></td>
    <td><code>true</code></td>
    <td>Either <code>true</code> or <code>false</code>. If the latter, preview images on video placeholders are not shown.</td>
</tr>
</tbody>
</table>

<h2 id="faq_issues">FAQ &amp; Common Issues</h2>
<p class="toplink"><a href="#top">To the top</a></p>

<h3 id="faq">FAQ</h3>

<p class="question">Can I use this extension together with the ClickToFlash plugin?</p>
<p class="answer">No. If you use the extension, you should uninstall the plugin completely, or add <code>com.apple.Safari</code> to its application whitelist.</p>

<p class="question">Does the replacement of Flash by HTML5 videos require Flash to be installed?</p>
<p class="answer">No. However, websites can check if your browser supports a given plugin, and change the page accordingly. For example, Vimeo, Dailymotion, and Veoh do not insert the Flash player on the page unless you have Flash, so there's nothing for ClickToFlash to replace.</p>

<p class="question">Can I use this extension together with the YouTube5 extension?</p>
<p class="answer">Yes, but to make sure that YouTube5's custom player is used whenever possible, you must add <code>youtube.com/v/ s.ytimg.com vimeo.com/moogaloop vimeocdn.com/flash/moogaloop _g3DSzyCT-K.swf</code> to the sources whitelist. The YouTube5 extension also blocks the Flash that it replaces.</p>

<p class="question">Why would I want to allow invisible elements?</p>
<p class="answer">You don't. For security and privacy reasons, automatically allowing invisible elements on random pages is not recommended: such elements are often used to spy on your browsing habits and can store cookies that bypass any of the browser's privacy settings. Also, it happens that elements are small at first but later grow to become full-fledged ads.</p>
<p>If a web page does not appear to work properly, use the 'Block Flash manually' setting to determine if the problem comes from the blocking an element, and target it using the sources whitelist (see <a href="#list_invisible">list of common invisible elements</a>).</p>

<p class="question">Can I use wild cards in the whitelists?</p>
<p class="answer">All whitelist-like text fields in the settings support regular expressions. For a string to be considered as a regular expression, it must be enclosed in parentheses. These regular expressions must follow the Javascript syntax (in particular, lookbehinds are not supported). Invalid regular expressions are ignored.</p>

<h3 id="issues">Common issues</h3>

<h4>Content is still being blocked after whitelisting a page</h4>

<p>A single tab can contain several documents, each with its own URL, and the URL displayed in Safari's toolbar is that of the root document only. The locations whitelist considers the location of an element to be the URL of its document. To find out the real location of an element, tick the 'Block Flash manually' checkbox in the settings, right-click on the element's placeholder, and select 'Show Element'.</p>

<h4>Downloading Vimeo videos does not work</h4>

<p>Currently, the only way to download a Vimeo video is to first load it in the browser (use the 'Copy Link' context option on the list of sources to put the video URL on the clipboard), wait for the redirection, and copy and paste the new URL to Safari's Downloads window. (The reason is that Safari's Downloads window uses a different User-Agent header for its requests, to which Vimeo answers by 404. In fact, the only user agents with which these URLs trigger a redirection seem to be Safari itself and the QuickTime framework.)</p>

<h4 id="list_invisible">List of invisible elements having critical functions</h4>

<table>
<thead>
<tr>
    <th>Domains</th>
    <th>Function of invisible element</th>
    <th>Size</th>
    <th>Source</th>
</tr>
</thead>
<tbody>
<tr>
    <td>mail.google.com</td>
    <td>Upload multiple attachments simultaneously. On some systems, whitelisting this element mysteriously fixes several unrelated Gmail glitches</td>
    <td>1x1</td>
    <td>https://mail.google.com/mail/uploader/uploaderapi2.swf</td>
</tr>
<tr>
    <td>prostopleer.com &amp; others</td>
    <td>Required by SoundManager2 for Flash 9</td>
    <td>8x8</td>
    <td>soundmanager2_flash9.swf</td>
</tr>
<tr>
    <td>github.com, soundcloud.com, www.discogs.com &amp; others</td>
    <td>Required by SoundManager2 for Flash 8</td>
    <td>6x6 8x8</td>
    <td>soundmanager2.swf</td>
</tr>
<tr>
    <td>www.amazon.com</td>
    <td>Amazon music samples</td>
    <td>1x1</td>
    <td>g-ecx.images-amazon.com</td>
</tr>
<tr>
    <td>www.bbc.co.uk</td>
    <td>Loads video players on some news pages</td>
    <td>1x1</td>
    <td>emp_proxy.swf</td>
</tr>
<tr>
    <td>www.hulu.com</td>
    <td>Loads the main video player</td>
    <td>1x1</td>
    <td>http://www.hulu.com/loadplayer.swf</td>
</tr>
<tr>
    <td>various</td>
    <td>Required by Yahoo! Media Player</td>
    <td>1x1</td>
    <td>flashsound-2.0.31.swf</td>
</tr>
</tbody>
</table>

<h2 id="changelog">Release Notes</h2>
<p class="toplink"><a href="#top">To the top</a></p>

<p id="v2.1"><b>Version 2.1</b> (January 2, 2011)</p>
<ul>
    <li>Much improved CSS for the source selector (thanks Roberto!)</li>
    <li>The 'Show preview image' setting is now <a href="#hidden_settings">hidden</a></li>
</ul>

<p id="v2.0"><b>Version 2.0</b> (January 1, 2011)</p>
<ul>
    <li>When several video sources are available, it is now possible to switch between them (<a href="#sources">view details</a>)</li>
    <li>Various killer fixes</li>
    <li>Revamped settings</li>
    <li>New context menu item to temporarily disable ClickToFlash</li>
</ul>

<p id="v1.9.2"><b>Version 1.9.2</b> (December 5, 2010)</p>
<ul>
    <li>Broadcast Interactive Media and Megavideo killers</li>
    <li>Fixed: Flash videos on collegehumor.com could be incorrectly replaced by Vimeo videos (thanks Josh Rafofsky!)</li>
</ul>

<p id="v1.9.1"><b>Version 1.9.1</b> (November 26, 2010)</p>
<ul>
    <li>Fixed: YouTube's iframe embeds were not replaced anymore (thanks Michael Wren!)</li>
</ul>

<p id="v1.9"><b>Version 1.9</b> (November 25, 2010)</p>
<ul>
    <li>New killers: Blip.tv, Break.com, Metacafe, Tumblr, and more!</li>
</ul>

<p id="v1.8.8"><b>Version 1.8.8</b> (November 21, 2010)</p>
<ul>
    <li>Worked around a bug in Safari 5.0.3 that broke video replacements when Flash was not installed</li>
</ul>

<p id="v1.8.7"><b>Version 1.8.7</b> (November 7, 2010)</p>
<ul>
    <li>Fixed a placeholder layout issue affecting notably Google Street View (thanks Joe Strzemp!)</li>
    <li>Fixed a typo affecting replacement of some embedded Vimeo videos</li>
</ul>

<p id="v1.8.6"><b>Version 1.8.6</b> (November 6, 2010)</p>
<ul>
    <li>Some previously unreplaced Vimeo videos are now available in HTML5</li>
    <li>All event listeners are registered using the addEventListener method, to avoid conflicts with other scripts (thanks Josh Rafofsky!)</li>
</ul>

<p id="v1.8.5"><b>Version 1.8.5</b> (October 31, 2010)</p>
<ul>
    <li>Fixed a bug that caused videos to download needlessly in the background when there were several Vimeo videos on a page (thanks Pedro!)</li>
</ul>

<p id="v1.8.4"><b>Version 1.8.4</b> (October 29, 2010)</p>
<ul>
    <li>Fixed a bug introduced in 1.8.3 that could cause whitelisted elements to be blocked</li>
</ul>

<p id="v1.8.3"><b>Version 1.8.3</b> (October 26, 2010)</p>
<ul>
    <li>Added 'Load Invisible Flash' contextual menu item</li>
    <li>Fixed a bug that could cause video elements to have size 0x0</li>
</ul>

<p id="v1.8.2"><b>Version 1.8.2</b> (October 21, 2010)</p>
<ul>
    <li>Fixed a typo in 1.8.1 that caused Flash not to be blocked when using the sources whitelist</li>
</ul>

<p id="v1.8.1"><b>Version 1.8.1</b> (October 20, 2010)</p>
<ul>
    <li>Fixed a bug that could cause the 'Load All Flash' function to remove blocked elements</li>
    <li>Fixed incorrect rendering of placeholder elements of size &#x2264;1px that could break pixel-perfect layouts</li>
    <li>Video replacement support for the SWFObject Flash player</li>
</ul>

<p id="v1.8"><b>Version 1.8</b> (October 1, 2010)</p>
<ul>
    <li>Video files downloaded from YouTube are named by the title of the video</li>
    <li>Removed download links in favor of an optional contextual menu item (enabled by default)</li>
    <li>Bumped version number because it was getting out of control!</li>
</ul>

<p id="v1.7.10"><b>Version 1.7.10</b> (September 30, 2010)</p>
<ul>
    <li>Fixed loading of long playlists with missing tracks</li>
</ul>

<p id="v1.7.9"><b>Version 1.7.9</b> (September 29, 2010)</p>
<ul>
    <li>Clicking on a download link downloads the video directly</li>
    <li>Displays the blocked element's source as a tooltip when hovering a placeholder</li>
    <li>Placeholders inherit CSS box model and positioning properties of the blocked element to preserve page layout</li>
    <li>Fixed progressive loading of playlists</li>
</ul>

<p id="v1.7.8"><b>Version 1.7.8</b> (September 23, 2010)</p>
<ul>
    <li>Fixed invisible elements whitelisting</li>
</ul>

<p id="v1.7.7"><b>Version 1.7.7</b> (September 21, 2010)</p>
<ul>
    <li>Eradicated all listeners to mutation events from the extension</li>
    <li>Fixed broken CSS introduced in 1.7.6</li>
</ul>

<p id="v1.7.6"><b>Version 1.7.6</b> (September 16, 2010)</p>
<ul>
    <li>Whitelists now use spaces as separators (they are automatically updated)</li>
    <li>More successful video replacements for generic Flash players</li>
    <li>Does not replace streaming YouTube videos by nonfunctional video elements anymore</li>
    <li>Improved performance and correctness of whitelist parsing</li>
    <li>Fixed Flash not being loadable on some websites that use placeholders for their Flash objects and listen to click events from parent elements</li>
</ul>

<p id="v1.7.5"><b>Version 1.7.5</b> (September 10, 2010)</p>
<ul>
    <li>Fixed a bug introduced in 1.7.4 that could create several placeholder elements for the same blocked element</li>
</ul>

<p id="v1.7.4"><b>Version 1.7.4</b> (September 9, 2010)</p>
<ul>
    <li>Fixed Flash elements not showing up or not behaving properly when restored, in particular in those instances where the original ClickToFlash plugin works but this extension did not</li>
    <li>CSS has been completely rewritten to be more effective</li>
    <li>Worked around a bug in Safari that changed the aspect ratio of the video element when using full-page zoom (thanks Adrian Luff!)</li>
    <li>Fixed: some embedded Vimeo videos were not being replaced</li>
</ul>

<p id="v1.7.3"><b>Version 1.7.3</b> (September 6, 2010)</p>
<ul>
    <li>Fixed a typo affecting source blacklisting (thanks Marc Saurfelt!)</li>
    <li>Improved CSS to better override author stylesheets</li>
</ul>

<p id="v1.7.2"><b>Version 1.7.2</b> (September 4, 2010)</p>
<ul>
    <li>Fixed a potential compatibility issue with other extensions (regression introduced in 1.7, thanks Mike Cosentino!)</li>
</ul>

<p id="v1.7.1"><b>Version 1.7.1</b> (September 4, 2010)</p>
<ul>
    <li>Fixed handling of elements with no source and no type (regression introduced in 1.7)</li>
</ul>

<p id="v1.7"><b>Version 1.7</b> (September 4, 2010)</p>
<ul>
    <li>Preview images on video placeholders</li>
    <li>Direct link to the video at the bottom of video placeholders</li>
    <li>The setting to load the video player automatically is now a whitelist</li>
    <li>Lighter placeholders</li>
    <li>Improved CSS of video elements (controls stay at the bottom)</li>
    <li>Adding a location or source to the whitelist loads the targeted content at once</li>
    <li>Support for YouTube's future on-site player</li>
    <li>Support for Vimeo's new universal player</li>
    <li>Higher-quality poster images for Dailymotion videos</li>
    <li>Fixed Vimeo's SD video URLs: they now correctly points to the 360p version in all cases</li>
    <li>Fixed relative URL resolution</li>
    <li>Fixed a vulnerability that would allow invalid HTML to bypass ClickToFlash's blocking</li>
</ul>

<p id="v1.6.3"><b>Version 1.6.3</b> (August 20, 2010)</p>
<ul>
    <li>To download a video directly, move the mouse cursor up from the play/pause button to reveal a link</li>
    <li>Added a slider to control the opacity of the placeholder elements</li>
    <li>Most contextual menu items are now optional</li>
    <li>Added 'View in QuickTime Player' contextual menu item</li>
    <li>Tweaked the CSS so that inline objects remain inline (thanks Roberto!)</li>
    <li><del>TODO: Update this webpage&#x2026;</del></li>
</ul>

<p id="v1.6.2"><b>Version 1.6.2</b> (August 16, 2010)</p>
<ul>
    <li>First .2 release ever!</li>
    <li>The 'Load All Flash' contextual menu item is hidden if there is no blocked Flash on the page</li>
    <li>'View on YouTube' works for playlists</li>
    <li>Fixed a few unfortunate typos affecting playlist controls</li>
    <li>Fixed: volume setting became ineffective in 1.6</li>
    <li>Longest changelog yet!</li>
</ul>

<p id="v1.6.1"><b>Version 1.6.1</b> (August 14, 2010)</p>
<ul>
    <li>Added a contextual menu item to view an embedded video from YouTube, Vimeo, Dailymotion, or Veoh on the main website</li>
    <li>Fixed more: some embedded YouTube videos were not being replaced</li>
</ul>

<p id="v1.6"><b>Version 1.6</b> (August 13, 2010)</p>
<ul>
    <li>Playlist support for YouTube and the JW Player</li>
    <li>Added a contextual menu item to download the video file</li>
    <li>Fixed: some embedded YouTube videos were not being replaced</li>
</ul>

<p id="v1.5.1"><b>Version 1.5.1</b> (August 8, 2010)</p>
<ul>
    <li>Code optimization made possible by the disappearance of a bug in Safari 5.0.1</li>
</ul>

<p id="v1.5"><b>Version 1.5</b> (August 6, 2010)</p>
<ul>
    <li>Added support for Veoh videos (requires Perian)</li>
    <li>Added a setting to use nonnative codecs only as a last resort</li>
    <li>Fixed: some embedded Vimeo videos were not being replaced</li>
    <li>Worked around the fact that Safari would load fallback content upon restoring an object if fallback content was being used when it was removed</li>
</ul>

<p id="v1.4"><b>Version 1.4</b> (August 3, 2010)</p>
<ul>
    <li>Added 'Load All Flash' contextual menu item</li>
    <li>In the whitelist settings, a string enclosed in parentheses is now interpreted as a regular expression</li>
    <li>Debugging mode is now a hidden setting</li>
</ul>

<p id="v1.3"><b>Version 1.3</b> (August 2, 2010)</p>
<ul>
    <li>Extension icon by Ast A. Moore</li>
    <li>Added optional use of nonnative codecs. With Perian installed ClickToFlash can now replace:
    <ul>
        <li>360p and 480p YouTube videos</li>
        <li>all the previously unplayable Vimeo and Dailymotion videos</li>
    </ul>
    </li>
    <li>Added more control over the attributes of the <code>&lt;video&gt;</code> tags</li>
</ul>

<p id="v1.2"><b>Version 1.2</b> (August 2, 2010)</p>
<ul>
    <li>Added negated whitelisting</li>
    <li>Added an optional contextual menu item to add a source or location to the whitelist</li>
    <li>Replacement of embedded YouTube videos now works if YouTube is in HTML5 Beta (thanks again Ast!)</li>
</ul>

<p id="v1.1.1"><b>Version 1.1.1</b> (July 31, 2010)</p>
<ul>
    <li>Fixed Flash not being blocked on some sites due to invalid MIME types (thanks Ast A. Moore!)</li>
</ul>

<p id="v1.1"><b>Version 1.1</b> (July 31, 2010)</p>
<ul>
    <li>Fixed whitelisting</li>
    <li>The 'Remove Element' contextual menu item now removes all parent nodes of the element as long as they have a single child.</li>
</ul>

<p id="v1.0"><b>Version 1.0</b> (July 30, 2010)</p>
<ul>
    <li>Initial release</li>
</ul>

<footer>
<p id="footer_left">Updated on January 3, 2011</p>
<p id="footer_right"><a href="#top">To the top</a></p>
<p id="footer_middle"><a href="http://validator.w3.org/check?uri=http%3A%2F%2Fhoyois.github.com%2Fsafariextensions%2Fclicktoflash%2F;verbose=1">XHTML5</a> • <a href="http://jigsaw.w3.org/css-validator/validator?uri=http%3A%2F%2Fhoyois.github.com%2Fsafariextensions%2Fclicktoflash%2F&amp;profile=css3&amp;usermedium=all&amp;warning=1">CSS3</a></p>
</footer>

</body>
</html>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8"/>
    <meta name="author" content="Marc Hoyois"/>
    <meta name="description" content="Prevents plugins from loading automatically"/>
    <title>ClickToPlugin Safari extension</title>
    <link rel="stylesheet" type="text/css" href="../styles.css"/>
</head>
<body>
<header id="top">
<h1>ClickToPlugin Safari extension</h1>
<p class="author">by Marc Hoyois</p>
</header>

<nav>
<a href="../">My Safari extensions</a> &gt; ClickToPlugin
</nav>

<div id="download">
<p><a href="http://github.com/downloads/hoyois/safariextensions/ClickToPlugin-2.2.2.safariextz">Download ClickToPlugin 2.2.2</a></p>
<p><b>Included localizations:</b> English, French</p>
<p>Previous versions can be downloaded from <a href="https://github.com/hoyois/safariextensions/downloads">GitHub</a>.</p>
</div>

<div class="warning">
    Warning: The 'Features' and 'Settings' sections on this webpage have not been updated to version 2.2 yet.
</div>

<div id="requirements">
<b>Requirements</b>
<ul>
    <li>Safari 5.0.1 or higher</li>
    <li>On Windows, QuickTime is required for HTML5 video</li>
</ul>
</div>

<div id="contents">
<b>Jump to</b>
<ul>
    <li><a href="#features">Features</a></li>
    <li><a href="#settings">Settings</a></li>
    <li><a href="#faq_issues">FAQ &amp; Common Issues</a></li>
    <li><a href="#changelog">Release Notes</a></li>
</ul>
</div>

<div id="intro">
<p>This is an extension of my ClickToFlash extension that can deal with all types of embedded content.</p>

<p>Feel free to <a href="mailto:marc%20dot%20hoyois%20@t%20gmail%20dot%20com?subject=%5BCTP%5D%20Your%20extension%20rocks,%20but...">request features</a> and please <a href="mailto:marc%20dot%20hoyois%20@t%20gmail%20dot%20com?subject=%5BCTP%5D%20This%20piece%20of%20garbage%20doesn%27t%20work%21">report bugs</a>. <b>However, please read the <a href="#faq_issues">FAQ &amp; Common Issues</a> section carefully before sending me an email.</b></p>

<p>To unpack the source to the current directory, run <code>xar -f /path/to/ClickToPlugin.safariextz -x</code>. You can also <a href="http://github.com/hoyois/clicktoflash/tree/click-to-plugin">browse the latest source</a> on GitHub.</p>
</div>

<h3 id="acknowledgements">Acknowledgements</h3>
<p>Both of my extensions owe a lot to several people:</p>
<ul>
    <li>This extension is directly built on <a href="http://github.com/mattball/ClickToFlash-safari-extension">this previous ClickToFlash extension</a> by Matt Ball. Although most of the Javascript code and overall organization has changed, my extension still uses two key ideas from it: a ClickToFlash class that is instantiated by every web page and an army of 'killers' having the task to find HTML5 video replacements. The awesome CSS of the placeholders is also Matt's.</li>
    <li>I learned from Félix Cloutier (developer of <a href="http://safari.laissemoichercherca.com/plugincustoms">Plugin Customs</a>) how to detect Java applets.</li>
    <li>I learned from Rodger Combs' <a href="http://combsconnections.tk/extensions/">Plugin Blocker</a> extension about AJAX requests and how to use them to fetch the URL of videos on Vimeo and Veoh.</li>
    <li>The extension's icon was designed by <a href="http://about.me/astamoore">Ast A. Moore</a>.</li>
    <li>The CSS of the source selector was devised by Robert Lange.</li>
</ul>

<p>Further, thanks should be given to</p>
<ul>
    <li>Yuli Cherkashin (Юлий Черкашин) for the Russian localization,</li>
    <li>Shiva Huang for the Traditional Chinese localization,</li>
    <li><a href="http://www.aoneonline.net/">aONe</a> for the Spanish localization.</li>
</ul>

<h2 id="features">Features</h2>
<p class="toplink"><a href="#top">To the top</a></p>

<h3 id="features_blocking">Blocking plugins</h3>
<p>ClickToPlugin prevents Safari from launching plugins automatically, resulting in faster browsing, reduced fan usage, and increased battery life. It replaces every plugin object by a placeholder element (fig.&#160;1) that can be clicked to load the embedded content. The type of content that ClickToPlugin blocks can be specified in the <a href="#whitelist_settings">settings</a>. Right-clicking on a placeholder reveals the usual context menu with one added item, 'Hide Plugin', which effectively removes the HTML element from the webpage. This is useful for getting rid of overlays that block access to page content. Additional context menu items for adding a page or element to the whitelist or unlocking all blocked elements in a document can be enabled in the <a href="#menus">settings</a>. The keyboard shortcut &#x2303;&#x2318;A can be used to load all plugins in the frontmost tab.</p>

<figure>
<img src="CTP_Flash.png" alt="Flash placeholder"/>
<img src="CTP_Silverlight.png" alt="Silverlight placeholder"/>
<img src="CTP_Java.png" alt="Java placeholder"/>
<img src="CTP_QuickTime.png" alt="QuickTime placeholder"/>
<img src="CTP_Flip4Mac.png" alt="Flip4Mac placeholder"/>
<figcaption>Figure 1: Examples of placeholder elements</figcaption>
</figure>

<p class="note">This extension does not block <code>&lt;applet&gt;</code> elements. These elements are used to embed Java applets into web pages and will launch a Java plugin. The reason is that they <a href="https://bugs.webkit.org/show_bug.cgi?id=44023">cannot</a> be blocked.</p>

<h3 id="features_replacing">Replacing plugins by HTML5</h3>
<p>ClickToPlugin is able to replace certain blocked elements by HTML5 media elements. The label of the placeholder is then changed accordingly (fig.&#160;2), and a preview image of the video is shown when available. Clicking on such a placeholder loads Safari's video player. In Snow Leopard this video player features a fullscreen button (fig.&#160;3) and uses hardware acceleration on supported Macs. Double-clicking inside the video player toggles looping.</p>

<figure>
<img src="CTP_H264.png" alt="Video placeholder"/>
<img src="CTP_HDH264.png" alt="HD Video placeholder"/>
<figcaption>Figure 2: Examples of video placeholder elements</figcaption>
</figure>

<figure>
<img src="Safari_video_player.png" alt="Safari video player"/>
<figcaption>Figure 3: Safari's video player in Snow Leopard</figcaption>
</figure>

<p>The original element can still be loaded by option-clicking or middle-clicking the placeholder, by right-clicking on the placeholder and choosing 'Load Plugin', or by right-clicking the video and choosing 'Reload in Plugin'.</p>

<p>ClickToPlugin can create HTML5 versions of most videos (both on-site and embedded) from the following web sites: YouTube, Vimeo, Dailymotion, Blip.tv, Break.com, Megavideo, Metacafe, and Veoh. In addition, ClickToPlugin will find audio/video replacements to several generic Flash and Silverlight players, and use existing <code>&lt;audio&gt;</code>/<code>&lt;video&gt;</code> fallback content. It can also replace directly embedded QuickTime, Windows Media, or DivX videos by HTML5 video elements.</p>

<p class="note">Playback of nonnative codecs in Safari uses much more CPU than native playback and does not benefit from hardware acceleration. Moreover, if autoplay is enabled, Safari may start playing the video too early for smooth playback.</p>

<h4 id="sources">Source selection</h4>

<p>If the 'Show list of available sources' setting is enabled, a list of all available video sources (for example differing in quality) appears when hovering in the top left corner of the video placeholder or the video element (fig.&#160;4). On the video placeholder, clicking on a source loads that source. On the video element, clicking on a source loads that source and jumps to the current playback time if the video is seekable. When right-clicking on a source, the 'Download Video' and 'View in QuickTime Player' options apply to that particular source.</p>

<figure>
<img src="Sources.png" alt="List of sources on placeholder"/>
<img src="Sources2.png" alt="List of sources on video element"/>
<figcaption>Figure 4: Lists of sources</figcaption>
</figure>

<h4 id="playlists">Playlists</h4>

<p>If the 'Use playlists' setting is enabled, ClickToPlugin can sometimes load whole playlists into the video player. This feature is available for YouTube's on-site playlists (<code>&amp;p=</code> URLs), YouTube's embedded playlists, and JW Player playlists. When a playlist is used, an additional control bar appears above the default one, featuring the title of the video being played, previous/next buttons to navigate the playlist, and an input field that can be used to jump to a video in the playlist (fig.&#160;5).</p>

<figure>
<img src="Playlist.png" alt="Video playlist"/>
<figcaption>Figure 5: Video playlist controls</figcaption>
</figure>

<h2 id="settings">Settings</h2>
<p class="toplink"><a href="#top">To the top</a></p>

<h3 id="whitelist_settings">Whitelists</h3>

<figure>
<img src="Whitelists.png" alt="Whitelists settings screenshot"/>
</figure>

<p>Items in whitelists must be separated by spaces.</p>

<p><b>Plugins whitelist</b><br/>
Matches the name of an installed plugin with spaces removed. It is also possible to target individual MIME types by prefixing <code>MIME:</code> to an item. Thus, <code>myplugin MIME:audio</code> would match a plugin named 'My Plugin 0.1.2' and any MIME type containing 'audio'. MIME types are strings of the form '<em>type</em>/<em>subtype</em>[;<em>parameters</em>]' specifying the nature of the embedded content. To see the full list of active plugins, their names, and which MIME types they control, go to 'Help' > 'Installed Plug-ins' from Safari's toolbar.</p>

<p><b>Locations whitelist</b><br/>
Matches embedded content in documents whose absolute URLs contain an item of this list.</p>

<p><b>Sources whitelist</b><br/>
Matches embedded content whose absolute URL contains an item of this list.</p>

<p><b>Negate list</b><br/>
Tick this to use a list as blacklist instead of whitelist.</p>

<p class="note">If you only want to block Flash content, you can use the more lightweight <a href="../clicktoflash">ClickToFlash extension</a>.</p>

<h3 id="video_settings">HTML5 Settings</h3>

<figure>
<img src="HTML5_Settings.png" alt="HTML5 settings screenshot"/>
<img src="HTML5_Settings2.png" alt="HTML5 settings screenshot 2"/>
<img src="HTML5_Settings3.png" alt="HTML5 settings screenshot 3"/>
<img src="HTML5_Settings4.png" alt="HTML5 settings screenshot 4"/>
</figure>

<p><b>Look for media replacements to plugins</b><br/>
If unticked, ClickToPlugin does not go through the process of looking for video files to replace blocked elements. All the following options are then without effect.</p>

<p><b>Show list of available sources</b><br/>
See <a href="#sources">above</a>.</p>

<p><b>Use playlists</b><br/>
See <a href="#playlists">above</a>.</p>

<p><b>Load the media player automatically</b><br/>
If ticked, ClickToPlugin automatically replaces blocked elements on locations matching a string in the text field by HTML5 media elements when available, without waiting for the user to click on a placeholder. Items in the text field must be separated by spaces. Simply leave the text field blank to use this behavior on all web pages.</p>

<p><b>Initial behavior</b><br/>
Choose whether ClickToPlugin creates media elements with the 'preload' attribute set to 'none', to 'auto', or with the 'autoplay' attribute. With the 'Do not buffer' option, the video will only start buffering when the 'Play' button is clicked.</p>

<p><b>Preferred source</b><br/>
An upper bound on the resolutions of the videos loaded by ClickToPlugin. If 'Plugin' is selected, HTML5 video can only be loaded from the list of sources (a star will appear on the placeholder's badge to indicate that alternative media sources are available).</p>

<p><b>Nonnative codecs</b><br/>
Prescribe whether ClickToPlugin considers video files that will use third-party QuickTime components to play. If 'Use only as a last resort' is selected, ClickToPlugin will not load such videos unless there are no natively playable videos available. If 'Use freely' is selected, ClickToPlugin will load the highest-quality video regardless of its format.</p>

<p><b>Sound volume</b><br/>
Sets the initial volume of videos created by ClickToPlugin. Videos on the active page will also respond to this slider while playing.</p>

<h3 id="menus">Contextual menu items</h3>

<figure>
<img src="Contextual_menu_items.png" alt="Contextual menu items settings screenshot"/>
</figure>

<p><b>Disable/Enable ClickToPlugin</b><br/>
Disabling ClickToPlugin prevents it from injecting its scripts in any new web page. The active page is reloaded, while ClickToPlugin will continue to work normally in other existing pages. Enabling ClickToPlugin has the opposite effect.</p>

<p><b>Add to Whitelist</b><br/>
A context menu item that reads 'Add Source to Whitelist' on placeholder elements and 'Add Location to Whitelist' elsewhere. When selected, a JavaScript pop-up box appears with the URL of the source or location that the user can trim before adding to the respective whitelist.</p>

<p><b>Load All Plugins</b><br/>
Appears everywhere except on placeholder elements and loads all blocked elements in a document.</p>

<p><b>Load Invisible Plugins</b><br/>
A plugin is considered invisible if its size is at most 8x8 pixels.</p>

<p><b>Download Video</b><br/>
Appears on video placeholders and video elements.</p>

<p><b>View on Site</b><br/>
Appears on embedded Blip.tv, Break.com, Dailymotion, Megavideo, Metacafe, Veoh, Vimeo, and YouTube videos. It loads the video on its respective website in a new tab.</p>

<p><b>View in QuickTime Player</b><br/>
Opens a video in the QuickTime Player application.</p>

<h3 id="other_settings">Other</h3>

<figure>
<img src="Other.png" alt="Other settings screenshot"/>
<img src="Other2.png" alt="Other settings screenshot 2"/>
</figure>

<p><b>Allow invisible plugins</b><br/>
A plugin is considered invisible if its size is at most 8x8 pixels.</p>

<p><b>Block plugins manually</b><br/>
If ticked, a pop-up box asks the user for confirmation before blocking any element. This box displays the following information about the element: its type (Flash, Silverlight, etc.), its location, its source, its position within its document, and its size. Further, an option 'Show Element' is added to the context menu of placeholder elements; selecting it shows the location and source of the blocked element, as well as the blocked element itself. This is useful for getting information about invisible elements or the location of elements within iframes.</p>

<p><b>sIFR text</b><br/>
sIFR is a pre-CSS3 technology for displaying advanced typography on the web. It uses JavaScript to replace some text elements on the page by text-mimicking Flash elements. Choose 'Show text only' to disable this process and display the original HTML text.</p>

<p><b>Opacity</b><br/>
This slider controls the opacity of the placeholder elements, from invisible to opaque.</p>

<h3 id="hidden_settings">Hidden settings</h3>

<p>Hidden settings cannot be modified from Safari's preferences. To set the hidden setting <code>key</code> to the value <code>value</code>, run <code>defaults write com.apple.Safari ExtensionSettings-com.hoyois.safari.clicktoplugin-GY5KR7239Q -dict-add key -string 'value'</code> in the Terminal (to undo, use the default value). Safari must be restarted for the new values to take effect. You can use this command to set any other setting as well, but keep in mind that <code>value</code> must be a JSON-parseable string.</p>

<table>
<thead>
<tr>
    <th>Key</th>
    <th>Default</th>
    <th>Function</th>
</tr>
</thead>
<tbody>
<tr>
    <td><code>disabledKillers</code></td>
    <td><code>[]</code></td>
    <td>Must be an array of integers (e.g. <code>[5,7,12]</code>). Each integer corresponds to a killer to be deactivated: 0 YouTube, 1 Vimeo, 2 Dailymotion, 3 Break.com, 4 Blip.tv, 5 Metacafe, 6 Tumblr, 7 Veoh, 8 Megavideo, 9 Broadcast Interactive, 10 Generic Flash, 11 Generic Silverlight, 12 QuickTime, 13 Windows Media, 14 DivX (this numbering might change with each update).</td>
</tr>
<tr>
    <td><code>maxInvisibleSize</code></td>
    <td><code>8</code></td>
    <td>Must be a number. An element is considered invisible if its width and its height are at most this number.</td>
</tr>
<tr>
    <td><code>showPoster</code></td>
    <td><code>true</code></td>
    <td>Either <code>true</code> or <code>false</code>. If the latter, preview images on video placeholders are not shown.</td>
</tr>
</tbody>
</table>

<h2 id="faq_issues">FAQ &amp; Common Issues</h2>
<p class="toplink"><a href="#top">To the top</a></p>

<h3 id="faq">FAQ</h3>

<p class="question">Can I use this extension together with the ClickToFlash plugin?</p>
<p class="answer">No. If you use the extension, you should uninstall the plugin completely, or add <code>com.apple.Safari</code> to its application whitelist.</p>

<p class="question">Does the replacement of plugins by HTML5 videos require the plugin to be installed?</p>
<p class="answer">No. However, websites can check if your browser supports a given plugin, and change the page accordingly. For example, Vimeo, Dailymotion, and Veoh do not insert the Flash player on the page unless you have Flash, so there's nothing for ClickToPlugin to replace.</p>

<p class="question">Can I get rid of the 'ClickToPlugin Preferences&#x2026;' context menu item?</p>
<p class="answer">Yes: Quit Safari and type <code>defaults write com.apple.Safari ExtensionSettings-com.hoyois.safari.clicktoplugin-GY5KR7239Q -dict-add settingsContext -string 'false'</code> in the Terminal. Use <code>'true'</code> to bring the item back.</p>

<p class="question">Can I use this extension together with the YouTube5 extension?</p>
<p class="answer">Yes, but to make sure that the two extensions do not conflict, you must add <code>@youtube(-nocookie)?\.com/v/</code>, <code>s.ytimg.com</code>, <code>vimeo.com/moogaloop</code>, <code>vimeocdn.com/p/flash/mooga</code>, and <code>@^https?://s-static\.ak\.facebook\.com/rsrc\.php/v[1-9]/[a-zA-Z0-9]{2}/r/[0-9a-zA-Z_-]*\.swf</code> to the sources whitelist. The YouTube5 extension also blocks the Flash that it replaces.</p>

<p class="question">Why would I want to allow invisible elements?</p>
<p class="answer">You don't. For security and privacy reasons, automatically allowing invisible elements on random pages is not recommended: such elements are often used to spy on your browsing habits and can store cookies that bypass any of the browser's privacy settings. Also, it happens that elements are small at first but later grow to become full-fledged ads.</p>
<p>If a web page does not appear to work properly, use the 'Block plugins manually' setting to determine if the problem comes from the blocking an element, and target it using the sources whitelist (see <a href="#list_invisible">list of common invisible elements</a>).</p>

<p class="question">Can I use wild cards in the whitelists?</p>
<p class="answer">All whitelist-like text fields in the settings support regular expressions. For a string to be considered as a regular expression, it must be preceded by the <code>@</code> symbol. These regular expressions must follow the Javascript syntax (in particular, lookbehinds are not supported). Invalid regular expressions are ignored.</p>

<p class="question" id="applet_blocking">Why did you remove blocking of Java <code>&lt;applet&gt;</code>s in version 1.4.7?</p>
<p class="answer">Before 1.4.7, the extension was listening to mutation events, which is known to affect performance significantly. Primarily for this reason, the DOM level 3 specification <a href="http://www.w3.org/TR/DOM-Level-3-Events/#_34">deprecates</a> the use of those events, and the WebKit team even <a href="https://bugs.webkit.org/show_bug.cgi?id=8191">decided</a> not to implement one of them, preferring to wait for better solutions. Mutation events were in particular used to detect <code>&lt;applet&gt;</code> elements. However,</p>
<ul>
    <li>the blocking of <code>&lt;applet&gt;</code>s was fake anyway: the Java plugin would still launch and often make the beach ball appear,</li>
    <li>the extension still blocks Java <code>&lt;object&gt;</code>s, and</li>
    <li>the <code>&lt;applet&gt;</code> tag should slowly disappear as it is deprecated in HTML4 and invalid in HTML5.</li>
</ul>
<p>True blocking of <code>&lt;applet&gt;</code> elements will be introduced as soon as it is actually possible, namely when <a href="https://bugs.webkit.org/show_bug.cgi?id=44023">this WebKit bug</a> is addressed.</p>

<h3 id="issues">Common issues</h3>

<h4>I can't find the extension's settings!</h4>

<p>Right-click anywhere on a page but on a placeholder and the command 'ClickToPlugin Preferences&#x2026;' will appear.</p>

<h4>Content is still being blocked after whitelisting a page</h4>

<p>A single tab can contain several documents, each with its own URL, and the URL displayed in Safari's toolbar is that of the root document only. The locations whitelist considers the location of an element to be the URL of its document. To find out the real location of an element, tick the 'Block plugins manually' checkbox in the settings, right-click on the element's placeholder, and select 'Get Plugin Info'.</p>

<h4>The 'Download Video' option does not show up on Vimeo videos</h4>

<p>Currently, the only way to download a Vimeo video is to first load it in the browser (use the 'Copy Link' context option on the list of sources to put the video URL on the clipboard), wait for the redirection, and copy and paste the new URL to Safari's Downloads window. (The reason is that Safari's Downloads window uses a different User-Agent header for its requests, to which Vimeo answers by 404. In fact, the only user agents with which these URLs trigger a redirection seem to be Safari itself and the QuickTime framework.)</p>

<h4 id="list_invisible">List of invisible elements having critical functions</h4>

<table>
<thead>
<tr>
    <th>Domains</th>
    <th>Function of invisible element</th>
    <th>Size</th>
    <th>Source</th>
</tr>
</thead>
<tbody>
<tr>
    <td>mail.google.com</td>
    <td>Upload multiple attachments simultaneously. Whitelisting this element mysteriously fixes several unrelated Gmail glitches</td>
    <td>1x1</td>
    <td>https://mail.google.com/mail/uploader/uploaderapi2.swf</td>
</tr>
<tr>
    <td>prostopleer.com &amp; others</td>
    <td>Required by SoundManager2 for Flash 9</td>
    <td>8x8</td>
    <td>soundmanager2_flash9.swf</td>
</tr>
<tr>
    <td>github.com, soundcloud.com, www.discogs.com &amp; others</td>
    <td>Required by SoundManager2 for Flash 8</td>
    <td>6x6 8x8</td>
    <td>soundmanager2.swf</td>
</tr>
<tr>
    <td>www.amazon.com</td>
    <td>Amazon music samples</td>
    <td>1x1</td>
    <td>g-ecx.images-amazon.com</td>
</tr>
<tr>
    <td>www.bbc.co.uk</td>
    <td>Loads video players on some news pages</td>
    <td>1x1</td>
    <td>emp_proxy.swf</td>
</tr>
<tr>
    <td>www.hulu.com</td>
    <td>Loads the main video player</td>
    <td>1x1</td>
    <td>http://www.hulu.com/loadplayer.swf</td>
</tr>
<tr>
    <td>various</td>
    <td>Required by Yahoo! Media Player</td>
    <td>1x1</td>
    <td>flashsound-2.0.31.swf</td>
</tr>
</tbody>
</table>

<h2 id="changelog">Release Notes</h2>
<p class="toplink"><a href="#top">To the top</a></p>

<p id="v2.2.2"><b>Version 2.2.2</b> (April 7, 2011)</p>
<ul>
    <li>Fixed an issue that could cause the release notes to pop up on every launch (thanks Matt Neuburg!)</li>
</ul>

<p id="v2.2.1"><b>Version 2.2.1</b> (April 7, 2011)</p>
<ul>
    <li>Fix for Facebook's ever changing video player URL</li>
</ul>

<p id="v2.2"><b>Version 2.2</b> (April 6, 2011)</p>
<ul>
    <li>The extension's settings are now on their own HTML page accessible through the shortcut menu</li>
    <li>Simplified plug-in whitelisting system</li>
    <li>Perfected plug-in detection system takes into account the <code>data:</code> URI protocol and uses MIME type sniffing as a last resort, following WebKit's internal mechanism</li>
    <li>New blacklists to permanently hide plug-ins</li>
    <li>Customizable keyboard and mouse shortcuts for media playback and other actions</li>
    <li>HTML5 replacements for Facebook videos</li>
    <li>Revamped playlist controls</li>
    <li>Safari's incomplete volume slider for HTML5 media elements can be used (you can see the finalized slider in the WebKit nightlies)</li>
    <li>The title of the video can be shown in the controls</li>
    <li>The HTML structure of the placeholder elements has been simplified using CSS3 flex boxes</li>
    <li>Complete CSS overhaul</li>
    <li>All localizations will now be bundled within the same extension</li>
    <li>Fixed HTML5 video aspect ratio issues using shadow DOM styling</li>
    <li>Fixed Megavideo and Veoh HTML5 replacements</li>
    <li>The 'Show text only' sIFR setting could cause web pages to display incorrectly</li>
</ul>

<p id="v2.1.4"><b>Version 2.1.4</b> (March 24, 2011)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v2.1.4">ClickToFlash 2.1.4</a></li>
</ul>

<p id="v2.1.3"><b>Version 2.1.3</b> (March 6, 2011)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v2.1.3">ClickToFlash 2.1.3</a></li>
</ul>

<p id="v2.1.2"><b>Version 2.1.2</b> (January 31, 2011)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v2.1.2">ClickToFlash 2.1.2</a></li>
</ul>

<p id="v2.1.1"><b>Version 2.1.1</b> (January 30, 2011)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v2.1.1">ClickToFlash 2.1.1</a></li>
</ul>

<p id="v2.1"><b>Version 2.1</b> (January 2, 2011)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v2.1">ClickToFlash 2.1</a></li>
</ul>

<p id="v2.0"><b>Version 2.0</b> (January 1, 2011)</p>
<ul>
    <li>Revamped whitelisting system for plugins (<a href="#whitelist_settings">view details</a>)</li>
    <li>Based on <a href="../clicktoflash/#v2.0">ClickToFlash 2.0</a></li>
</ul>

<p id="v1.6.2"><b>Version 1.6.2</b> (December 5, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.9.2">ClickToFlash 1.9.2</a></li>
</ul>

<p id="v1.6.1"><b>Version 1.6.1</b> (November 26, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.9.1">ClickToFlash 1.9.1</a></li>
</ul>

<p id="v1.6"><b>Version 1.6</b> (November 25, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.9">ClickToFlash 1.9</a></li>
</ul>

<p id="v1.5.7"><b>Version 1.5.7</b> (November 21, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.8.8">ClickToFlash 1.8.8</a></li>
</ul>

<p id="v1.5.6"><b>Version 1.5.6</b> (November 7, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.8.7">ClickToFlash 1.8.7</a></li>
</ul>

<p id="v1.5.5"><b>Version 1.5.5</b> (November 6, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.8.6">ClickToFlash 1.8.6</a></li>
</ul>

<p id="v1.5.4"><b>Version 1.5.4</b> (October 31, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.8.5">ClickToFlash 1.8.5</a></li>
</ul>

<p id="v1.5.3"><b>Version 1.5.3</b> (October 29, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.8.4">ClickToFlash 1.8.4</a></li>
</ul>

<p id="v1.5.2"><b>Version 1.5.2</b> (October 26, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.8.3">ClickToFlash 1.8.3</a></li>
</ul>

<p id="v1.5.1"><b>Version 1.5.1</b> (October 20, 2010)</p>
<ul>
    <li>Better plugin detection based on WebKit's internal mechanism</li>
    <li>Based on <a href="../clicktoflash/#v1.8.1">ClickToFlash 1.8.1</a></li>
</ul>

<p id="v1.5"><b>Version 1.5</b> (October 1, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.8">ClickToFlash 1.8</a></li>
</ul>

<p id="v1.4.9"><b>Version 1.4.9</b> (September 30, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.7.10">ClickToFlash 1.7.10</a></li>
</ul>

<p id="v1.4.8"><b>Version 1.4.8</b> (September 29, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.7.9">ClickToFlash 1.7.9</a></li>
</ul>

<p id="v1.4.7"><b>Version 1.4.7</b> (September 21, 2010)</p>
<ul>
    <li>Does not block <code>&lt;applet&gt;</code> elements anymore (read <a href="#applet_blocking">why</a>)</li>
    <li>Based on <a href="../clicktoflash/#v1.7.7">ClickToFlash 1.7.7</a></li>
</ul>

<p id="v1.4.6"><b>Version 1.4.6</b> (September 16, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.7.6">ClickToFlash 1.7.6</a></li>
</ul>

<p id="v1.4.5"><b>Version 1.4.5</b> (September 10, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.7.5">ClickToFlash 1.7.5</a></li>
</ul>

<p id="v1.4.4"><b>Version 1.4.4</b> (September 9, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.7.4">ClickToFlash 1.7.4</a></li>
</ul>

<p id="v1.4.3"><b>Version 1.4.3</b> (September 6, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.7.3">ClickToFlash 1.7.3</a></li>
</ul>

<p id="v1.4.2"><b>Version 1.4.2</b> (September 5, 2010)</p>
<ul>
    <li>Fixed: CSS of download links was broken in 1.4.1</li>
</ul>

<p id="v1.4.1"><b>Version 1.4.1</b> (September 5, 2010)</p>
<ul>
    <li>Fixed handling of QuickTime objects calling QuickTime Player (regression introduced in 1.4)</li>
</ul>

<p id="v1.4"><b>Version 1.4</b> (September 4, 2010)</p>
<ul>
    <li>Improved plugin detection</li>
    <li>Based on <a href="../clicktoflash/#v1.7">ClickToFlash 1.7</a></li>
</ul>

<p id="v1.3.3"><b>Version 1.3.3</b> (August 20, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.6.3">ClickToFlash 1.6.3</a></li>
</ul>

<p id="v1.3.2"><b>Version 1.3.2</b> (August 16, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.6.2">ClickToFlash 1.6.2</a></li>
</ul>

<p id="v1.3.1"><b>Version 1.3.1</b> (August 14, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.6.1">ClickToFlash 1.6.1</a></li>
</ul>

<p id="v1.3"><b>Version 1.3</b> (August 13, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.6">ClickToFlash 1.6</a></li>
</ul>

<p id="v1.2.1"><b>Version 1.2.1</b> (August 8, 2010)</p>
<ul>
    <li>Improved handling of QuickTime objects</li>
</ul>

<p id="v1.2"><b>Version 1.2</b> (August 8, 2010)</p>
<ul>
    <li>Safari's native MIME types are not blocked anymore</li>
    <li>Can now replace Silverlight, QuickTime, and Windows Media content by HTML5 videos</li>
    <li>Fixed invisible elements whitelisting</li>
    <li>Based on <a href="../clicktoflash/#v1.5.1">ClickToFlash 1.5.1</a></li>
</ul>

<p id="v1.1.1"><b>Version 1.1.1</b> (August 6, 2010)</p>
<ul>
    <li>Fixed a stupid typo in the code</li>
</ul>

<p id="v1.1"><b>Version 1.1</b> (August 6, 2010)</p>
<ul>
    <li>Based on <a href="../clicktoflash/#v1.5">ClickToFlash 1.5</a></li>
</ul>

<p id="v1.0.1"><b>Version 1.0.1</b> (August 3, 2010)</p>
<ul>
    <li>Fixed potential compatibility issues by trying not to block objects created by other extensions</li>
</ul>

<p id="v1.0"><b>Version 1.0</b> (August 3, 2010)</p>
<ul>
    <li>Initial release, based on <a href="../clicktoflash/#v1.4">ClickToFlash 1.4</a></li>
    <li>Extension icon by Ast A. Moore</li>
</ul>

<footer>
<p id="footer_left">Updated on April 9, 2011</p>
<p id="footer_right"><a href="#top">To the top</a></p>
<p id="footer_middle"><a href="http://validator.w3.org/check?uri=http%3A%2F%2Fhoyois.github.com%2Fsafariextensions%2Fclicktoplugin%2F;verbose=1">XHTML5</a> • <a href="http://jigsaw.w3.org/css-validator/validator?uri=http%3A%2F%2Fhoyois.github.com%2Fsafariextensions%2Fclicktoplugin%2F&amp;profile=css3&amp;usermedium=all&amp;warning=1">CSS3</a></p>
</footer>

</body>
</html>
